<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4S.0.0</modelVersion>
	<groupId>com.neusoft</groupId>
	<artifactId>springcloud_elm</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<!-- 统一JAR包和版本号的管理 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<java.version>21</java.version>
		<spring-boot.version>3.4.4</spring-boot.version>
		<spring-cloud.version>2024.0.1</spring-cloud.version>
		<mysql.version>8.0.33</mysql.version>
		<mybatis.version>3.0.3</mybatis.version>
		<lombok.version>1.18.30</lombok.version>
		<jackson.version>2.16.1</jackson.version>
		<commons-lang3.version>3.14.0</commons-lang3.version>
		<commons-io.version>2.15.1</commons-io.version>
		<hutool.version>5.8.25</hutool.version>
	</properties>
	<!-- 
	    dependmanagement是用在父工程中声明依赖，不引用。子模块继承之后再引包。 
	         作用是，锁定版本，子模块不用写grouid and version 
	-->
	<dependencyManagement>
		<dependencies>
			<!-- Spring Boot 依赖管理 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<!-- Maven也是单继承。这里继承了spring-boot中的dependencyManagement 
                     但是下面还要继承spring-cloud中的dependencyManagement。 
					使用scope=import就可以实现多继承了 
                -->
				<scope>import</scope>
			</dependency>
			<!-- Spring Cloud 依赖管理 -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- MySQL 驱动依赖管理 -->
			<dependency>
				<groupId>com.mysql</groupId>
				<artifactId>mysql-connector-j</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<!-- MyBatis 依赖管理 -->
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<!-- Lombok -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Jackson 统一版本管理 -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			
			<!-- Apache Commons -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<!-- Hutool -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<!-- 所有子模块都会继承的依赖 -->
	<dependencies>
		<!-- Spring Boot Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- 热部署 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<!-- MyBatis -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
		</dependency>
		
		<!-- MySQL -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!-- Eureka Client -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		
		<!-- OpenFeign -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		
		<!-- Spring Cloud Config（已彻底移除） -->
		<!-- <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency> -->

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<!-- Apache Commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		

		<!-- Hutool -->
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
		</dependency>
	</dependencies>
	<!-- 创建完子工程后，此处自动添加子工程模块 -->
	<modules>
		<module>user_server_10100</module>
		<module>food_server_10200</module>
		<module>business_server_10300</module>
		<module>cart_server_10400</module>
		<module>deliveryaddress_server_10500</module>
		<module>orders_server_10600</module>
		<module>eureka_server_8761</module>
		<module>eureka_server_8762</module>
		<module>food_server_10201</module>
		<module>gateway_server_14000</module>
		<module>business_server_10301</module>
		<module>cart_server_10401</module>
		<module>orders_server_10601</module>
		<module>config_server_15000</module>
		<module>config_server_15001</module>
	</modules>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<release>21</release>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>